@page "/vehicle"
@inject HttpClient Http

<h1>Транспортные средства</h1>

@if (vehicles == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Year of manufacture</th>
            <th>Cost, $</th>
            <th>Color</th>
            <th>Milleage, km</th>
            <th>Transmision</th>
            <th>State</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var vehicle in vehicles)
        {
            <tr>
                <td>@vehicle.ManufactureYear</td>
                <td>@vehicle.Cost</td>
                <td>@vehicle.Color</td>
                <td>@vehicle.Mileage</td>
                <td>@vehicle.Transmission</td>
                <td>@vehicle.VehicleState</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private VehicleDto[] vehicles;

    protected override async Task OnInitializedAsync()
    {
        vehicles = await Http.GetFromJsonAsync<VehicleDto[]>("vehicle");
    }

    public class VehicleDto
    {
        /// <summary>
        /// Стоимость транспортного средства
        /// </summary>
        public decimal Cost { get; set; }

        /// <summary>
        /// Год выпуска транспортного средства
        /// </summary>
        public int ManufactureYear { get; set; }
        
        /// <summary>
        /// Пробег
        /// </summary>
        public int Mileage { get; set; }
        
        /// <summary>
        /// Цвет
        /// </summary>
        public string Color { get; set; }

        /// <summary>
        /// Состояние транспортного средства
        /// </summary>
        public VehicleState VehicleState { get; set; }

        public Transmission Transmission { get; set; }
    }
    
    public enum Transmission
    {
        Manual,
        Automatic
    }

    public enum VehicleState
    {
        Normal,
        NeedsRepair
    }
}